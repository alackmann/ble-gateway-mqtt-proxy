name: CI - Test and Build

on:
  pull_request:
    branches:
      - main
      - develop
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run linting (if configured)
      run: npm run lint
      continue-on-error: true

    - name: Run tests
      run: npm test

  docker-build-test:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image (test)
      uses: docker/build-push-action@v5
      with:
        context: .
        load: true
        push: false
        tags: ble-gateway-mqtt-proxy:test
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Test Docker image
      run: |
        echo "🔍 Checking if Docker image was built successfully..."
        docker images ble-gateway-mqtt-proxy:test
        
        echo "📋 Verifying image exists..."
        if ! docker images ble-gateway-mqtt-proxy:test --format "table {{.Repository}}\t{{.Tag}}\t{{.ID}}" | grep -q "ble-gateway-mqtt-proxy"; then
          echo "❌ Docker image not found!"
          echo "Available images:"
          docker images
          exit 1
        fi
        
        echo "✅ Docker image found successfully"
        
        echo "🏷️ Inspecting image labels..."
        docker inspect ble-gateway-mqtt-proxy:test --format '{{ .Config.Labels }}' || echo "No labels found"
        
        echo "🚀 Running basic smoke test..."
        # Set environment variables for the container test
        timeout 15s docker run --rm \
          -e HTTP_PORT=3000 \
          -e MQTT_BROKER_URL=mqtt://localhost:1883 \
          -e MQTT_TOPIC_PREFIX=test/ \
          ble-gateway-mqtt-proxy:test &
        
        # Give it a moment to start up
        sleep 5
        
        echo "✅ Docker container smoke test completed"
